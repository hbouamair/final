{"version":3,"sources":["webpack:///src/app/create-inv/create-inv.page.html","webpack:///src/app/create-inv/create-inv.page.ts","webpack:///src/app/create-inv/create-inv.page.scss"],"names":["CreateInvPage","crud","fTP","modalController","toastController","file","androidPermissions","filePath","zone","fileOpener","titre","type","create","inventaireTab","storagePermissionCheck","getAllInvent","checkPermission","PERMISSION","WRITE_EXTERNAL_STORAGE","then","result","hasPermission","requestPermission","err","addInventai","date","connect","ls","res","items","i","push","error","text","message","duration","color","toast","present","item","console","log","name","localPath","selectedValue","download","subscribe","open","excelRead","e","JSON","stringify","presentToast","event","excel","schema","prop","String","required","Number","data","rows","length","physique","sap","selector","template"],"mappings":"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","file":"default~create-inv-create-inv-module~inventaire-inventaire-module-es5.js","sourcesContent":["export default \"<ion-content *ngIf=\\\"create\\\" class=\\\" add-inv ion-padding\\\">\\n\\n\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Titre</ion-label>\\n        <ion-input [(ngModel)]=\\\"titre\\\" type=\\\"text\\\"></ion-input>\\n    </ion-item>\\n\\n\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Date</ion-label>\\n        <ion-datetime [(ngModel)]=\\\"date\\\" displayFormat=\\\"MM/DD/YYYY\\\" min=\\\"2000-03-14\\\" max=\\\"2030-12-09\\\" value=\\\"2002-09-23T15:03:46.789\\\">\\n            <ion-icon slot=\\\"end\\\" name=\\\"calendar\\\"></ion-icon>\\n        </ion-datetime>\\n\\n    </ion-item>\\n\\n\\n    <ion-item>\\n        <ion-label position=\\\"floating\\\">Type</ion-label>\\n        <ion-select [(ngModel)]=\\\"type\\\" value=\\\"plannifié\\\">\\n            <ion-select-option value=\\\"plannifié\\\">Plannifié</ion-select-option>\\n            <ion-select-option value=\\\"termine\\\">Terminé</ion-select-option>\\n            <ion-select-option value=\\\"attente\\\">en attente</ion-select-option>\\n        </ion-select>\\n    </ion-item>\\n\\n\\n\\n    <ion-button class=\\\"btn-valid\\\" (click)=\\\"createInv()\\\">Valider</ion-button>\\n\\n\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"!create\\\">\\n\\n    <ion-card>\\n        <ion-card-header>\\n            <ion-row>\\n\\n                <ion-col>\\n                    <ion-card-subtitle>Reference\\n\\n                    </ion-card-subtitle>\\n                    <ion-label> </ion-label>\\n\\n                </ion-col>\\n                <ion-col>\\n                    <ion-card-subtitle>Type\\n\\n                    </ion-card-subtitle>\\n                    <ion-label slot=\\\"end\\\"> </ion-label>\\n\\n                </ion-col>\\n            </ion-row>\\n        </ion-card-header>\\n\\n        <ion-card-content>\\n\\n\\n            <ion-button class=\\\"upload\\\" (click)=\\\"connect()\\\">\\n                <ion-label>Choisir un fichier &nbsp;</ion-label>\\n                <ion-icon src=\\\"../../assets/ms-excel.svg\\\"></ion-icon>\\n\\n            </ion-button>\\n            <ion-scroll>\\n                <ion-list>\\n                    <ion-radio-group *ngFor=\\\"let item of items\\\" (ionChange)=\\\"radioGroupChange($event)\\\" [(ngModel)]=\\\"selectedValue\\\">\\n                        <ion-item (ionSelect)=\\\"radioSelect($event)\\\">\\n                            <ion-label>{{item.name}}</ion-label>\\n                            <ion-label class=\\\"date_modif\\\">{{item.modifiedDate | date: 'dd/MM/yyyy hh:mm:ss' }}</ion-label>\\n                            <ion-radio slot=\\\"start\\\" color=\\\"success\\\" (ionSelect)=\\\"select(item)\\\" [value]=\\\"item\\\"></ion-radio>\\n                        </ion-item>\\n\\n\\n                    </ion-radio-group>\\n\\n                    <ion-button slot=\\\"end\\\" (click)=\\\"upload()\\\">Valider</ion-button>\\n                </ion-list>\\n            </ion-scroll>\\n\\n\\n\\n\\n\\n\\n\\n        </ion-card-content>\\n    </ion-card>\\n\\n\\n</ion-content>\";","\nimport { Component, OnInit , Input ,NgZone} from '@angular/core';\nimport { CrudService } from '../crud.service';\nimport { FTP } from '@awesome-cordova-plugins/ftp/ngx';\nimport readXlsxFile from 'read-excel-file';\nimport { File } from '@ionic-native/file/ngx';\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\nimport { environment } from '../../config/environment';\nimport { FilePath } from '@ionic-native/file-path/ngx'\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\n\n\nimport {\n  NavParams,\n  AlertController,\n  ModalController,\n  Platform,\n  ToastController,\n} from '@ionic/angular';\n\n\ndeclare let cordova: any;\n\n@Component({\n  selector: 'app-create-inv',\n  templateUrl: './create-inv.page.html',\n  styleUrls: ['./create-inv.page.scss'],\n})\nexport class CreateInvPage implements OnInit {\n\n  titre: string = \"\"; \n  items : Array <any>;\n  date: Date ;\n  type: string = \"\";\n  create : boolean = true; \n  inventaireTab : any = [];\n\n  selectedValue : any  ;\n\n\n\n  constructor( private crud: CrudService ,private fTP: FTP ,public modalController: ModalController ,public toastController: ToastController \n    ,private file: File, private androidPermissions: AndroidPermissions ,private filePath: FilePath, \tprivate zone: NgZone, private fileOpener: FileOpener ) {\n \n    this.storagePermissionCheck();\n\n   }\n\n\n  ngOnInit() {\n  }\n  \n  ionViewDidEnter() {  \n    this.crud.getAllInvent()\n  }\n\n  openFileSelector(){\n    \n  }\n\n  storagePermissionCheck(){\n    this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE).then(\n      result => {\n        if(!result.hasPermission){\n          this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE);\n        }\n      },\n      err => {\n        this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE);\n      }\n    );\n  }\n\n\n\n  createInv(){\n    this.crud.addInventai(this.titre,this.date,this.type);\n    this.create= false ;\n  }\n   \n\n  getInventaire(){\n\n  }\n \n\n  \n public connect(){\n  return this.fTP.connect('ftp.more-software.com', 'moreftp@more-software.com', 'MorservsWMS2022%').then(() => {\n      this.fTP.ls('/Wms').then((res) => {\n        this.items = [];\n      \n        if(res){\n          for (let i in res ){\n            this.items.push(res[i]);\n          }\n        }else{\n          this.error(\n            'no file !!'\n          );\n        }\n\n       } ) }\n    )\n  }\n  \n  async error(text: any) {\n    const toast = await this.toastController.create({\n      message: text,\n      duration: 2000,\n      color: 'danger',\n    });\n    toast.present();\n  }\n\n  radioSelect(item) {\n    console.log ( \"SELECTED! \" + item.name);\n   \n}\n\nupload(){\n  \n  let localPath = \"/storage/emulated/0/Android/data/io.ionic.starter/\" + this.selectedValue.name;\n  this.fTP.download(localPath , '/Wms/'+this.selectedValue.name ).subscribe(() => {\n    this.fileOpener.open('/storage/emulated/0/Android/data/io.ionic.starter/'+this.selectedValue, 'application/vnd.ms-excel').then((res) =>{\n              this.excelRead(res);\n    }\n    ) .catch(e=> console.log(JSON.stringify(e)))\n    this.presentToast();\n   \n \n      (error :any)=>{\n        console.log(JSON.stringify(error));\n      }\n\n    \n    } , (error :any)=>{\n      console.log(JSON.stringify(error));\n    }\n  )\n\n\n  }\n\n  radioGroupChange(event) {\n    console.log(\"radioGroupChange\", this.selectedValue.name);\n   \n  }\n\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: 'Your file has been download.',\n      duration: 2000\n    });\n    toast.present();\n  }\n\n\n\n\n  excelRead(excel){\n    \n    \n\n    const schema = {\n      'Material' :{\n        prop : 'material',\n        type : String ,\n        required : false \n\n      } ,\n      'Description' :{\n        prop : 'description',\n        type : String ,\n        required : false \n\n      } ,\n      'Emplacement' :{\n        prop : 'emplacement',\n        type : String ,\n        required : false \n\n      } ,\n      'Physique' :{\n        prop : 'physique',\n        type : Number ,\n        required : false \n\n      } ,\n      'Sap' :{\n        prop : 'sap',\n        type : Number ,\n        required : false \n\n      } ,\n      'Ecart' :{\n        prop : 'ecart',\n        type : Number ,\n        required : false \n\n      } ,\n      'Cagette' :{\n        prop : 'cagette',\n        type : String ,\n        required : false \n\n      } ,\n\n    };\n    readXlsxFile(excel, {schema}).then((data) =>{\n        if( data.rows){\n\n          for (let i of data.rows){\n            \n            this.inventaireTab.push(i);\n          }\n         \n        }\n      //  for ( let i of this.inventaireTab){\n         // if(this.inventaireTab[i].physique <= this.inventaireTab[i].sap){\n         //   console.log(this.inventaireTab[i].physique);\n          //}\n         // else{\n           // console.log(\"its true\")\n          //}\n      //  }\n\n      for (let i = 0; i < this.inventaireTab.length; i++) {\n\n       if (this.inventaireTab[i].physique < this.inventaireTab[i].sap){\n         console.log(\"trop\")\n       }else{\n         console.log(\"c est bien\")\n       }\n        \n       \n      }\n        \n           \n      \n\n    }\n    \n    \n    \n    )\n\n  }\n\n\n    \n}\n\n\n\n\n","export default \"@font-face {\\n  font-family: 'acrom';\\n  src: url('Acrom-Medium.ttf');\\n}\\n\\n.add-inv {\\n  margin: auto;\\n  font-family: acrom;\\n}\\n\\n.add-inv ion-item {\\n  border: 1px solid #DCE8EE;\\n  margin: 12px;\\n  border-radius: 10px;\\n}\\n\\n.add-inv ion-label {\\n  font-family: acrom;\\n  color: #B2C4CC;\\n  font-size: 14px;\\n}\\n\\n.add-inv ion-select {\\n  font-family: acrom;\\n  color: #3D5A68;\\n  font-size: 14px;\\n}\\n\\n.add-inv ion-input {\\n  font-family: acrom;\\n  color: #3D5A68;\\n  font-size: 14px;\\n}\\n\\n.add-inv ion-datetime {\\n  font-family: acrom;\\n  color: #3D5A68;\\n  font-size: 14px;\\n}\\n\\n.add-inv .btn-valid {\\n  font-family: acrom;\\n  color: #FFFF;\\n  font-size: 14px;\\n  --background: #3D5A68;\\n  float: right;\\n}\\n\\nion-card-header ion-card-subtitle {\\n  color: #B2C4CC;\\n  font-size: 12px;\\n}\\n\\nion-card-header ion-label {\\n  color: #3D5A68;\\n  font-size: 16px;\\n}\\n\\n.upload {\\n  --background: #3D5A68;\\n  width: 220px;\\n  height: 50px;\\n  font-size: 12px;\\n  border-radius: 7px;\\n}\\n\\n.upload ion-label {\\n  font-family: acrom;\\n}\\n\\n.upload ion-icon {\\n  font-size: 300px;\\n}\\n\\n.date_modif {\\n  font-size: 8px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNyZWF0ZS1pbnYucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksb0JBQW9CO0VBQ3BCLDRCQUErQztBQUNuRDs7QUFFQTtFQUNJLFlBQVk7RUFDWixrQkFBa0I7QUFDdEI7O0FBSEE7RUFJUSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLG1CQUFtQjtBQUczQjs7QUFUQTtFQVNRLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUl2Qjs7QUFmQTtFQWNRLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtBQUt2Qjs7QUFyQkE7RUFtQlEsa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxlQUFlO0FBTXZCOztBQTNCQTtFQXdCUSxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGVBQWU7QUFPdkI7O0FBakNBO0VBNkJRLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osZUFBZTtFQUNmLHFCQUFhO0VBQ2IsWUFBWTtBQVFwQjs7QUFKQTtFQUVRLGNBQWM7RUFDZCxlQUFlO0FBTXZCOztBQVRBO0VBTVEsY0FBYztFQUNkLGVBQWU7QUFPdkI7O0FBSEE7RUFDSSxxQkFBYTtFQUNiLFlBQVk7RUFDWixZQUFZO0VBQ1osZUFBZTtFQUNmLGtCQUFrQjtBQU10Qjs7QUFYQTtFQU9RLGtCQUFrQjtBQVExQjs7QUFmQTtFQVVRLGdCQUFnQjtBQVN4Qjs7QUFMQTtFQUNJLGNBQWM7QUFRbEIiLCJmaWxlIjoiY3JlYXRlLWludi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnYWNyb20nO1xyXG4gICAgc3JjOiB1cmwoJy4uLy4uL2Fzc2V0cy9mb250cy9BY3JvbS1NZWRpdW0udHRmJyk7XHJcbn1cclxuXHJcbi5hZGQtaW52IHtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGZvbnQtZmFtaWx5OiBhY3JvbTtcclxuICAgIGlvbi1pdGVtIHtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjRENFOEVFO1xyXG4gICAgICAgIG1hcmdpbjogMTJweDtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgfVxyXG4gICAgaW9uLWxhYmVsIHtcclxuICAgICAgICBmb250LWZhbWlseTogYWNyb207XHJcbiAgICAgICAgY29sb3I6ICNCMkM0Q0M7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgfVxyXG4gICAgaW9uLXNlbGVjdCB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IGFjcm9tO1xyXG4gICAgICAgIGNvbG9yOiAjM0Q1QTY4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxuICAgIGlvbi1pbnB1dCB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IGFjcm9tO1xyXG4gICAgICAgIGNvbG9yOiAjM0Q1QTY4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxuICAgIGlvbi1kYXRldGltZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IGFjcm9tO1xyXG4gICAgICAgIGNvbG9yOiAjM0Q1QTY4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIH1cclxuICAgIC5idG4tdmFsaWQge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBhY3JvbTtcclxuICAgICAgICBjb2xvcjogI0ZGRkY7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIC0tYmFja2dyb3VuZDogIzNENUE2ODtcclxuICAgICAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB9XHJcbn1cclxuXHJcbmlvbi1jYXJkLWhlYWRlciB7XHJcbiAgICBpb24tY2FyZC1zdWJ0aXRsZSB7XHJcbiAgICAgICAgY29sb3I6ICNCMkM0Q0M7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgfVxyXG4gICAgaW9uLWxhYmVsIHtcclxuICAgICAgICBjb2xvcjogIzNENUE2ODtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi51cGxvYWQge1xyXG4gICAgLS1iYWNrZ3JvdW5kOiAjM0Q1QTY4O1xyXG4gICAgd2lkdGg6IDIyMHB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG4gICAgaW9uLWxhYmVsIHtcclxuICAgICAgICBmb250LWZhbWlseTogYWNyb207XHJcbiAgICB9XHJcbiAgICBpb24taWNvbiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzMDBweDtcclxuICAgIH1cclxufVxyXG5cclxuLmRhdGVfbW9kaWYge1xyXG4gICAgZm9udC1zaXplOiA4cHg7XHJcbn0iXX0= */\";"]}